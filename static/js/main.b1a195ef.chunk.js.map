{"version":3,"sources":["components/section/Section.module.css","components/filter/Filter.module.css","components/App.module.css","components/dataInput/DataInput.module.css","components/dataInput/DataInput.js","components/contacts/contactItem/ContactItem.js","components/contacts/Contacts.js","components/section/Section.js","components/filter/Filter.js","components/App.js","index.js","components/contacts/Contacts.module.css"],"names":["module","exports","DataInput","state","name","number","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","isContactExist","alert","addUser","id","shortid","generate","reset","className","style","form","onSubmit","this","type","pattern","title","required","onChange","btn","Component","ContactItem","user","removeUser","s","item","button","onClick","Contacts","filterInputHandler","map","Section","children","section","toUpperCase","Filter","filter","setFilter","label","input","App","contacts","some","toLowerCase","includes","prev","contact","users","localStorage","getItem","parseUsers","JSON","parse","prevState","setItem","stringify","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1a195ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2aN0g\",\"title\":\"Section_title__2oIwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3K0YO\",\"label\":\"Filter_label__23XmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DataInput_form__1El21\",\"number\":\"DataInput_number__2m9S-\",\"name\":\"DataInput_name__2_neu DataInput_number__2m9S-\",\"btn\":\"DataInput_btn__3YWIG\"};","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport style from \"./DataInput.module.css\";\nimport shortid from 'shortid';\n\nclass DataInput extends Component {\n    state = {\n        name: '',\n        number: '',\n    }\n\n    onHandleChange = (e) => {\n        const {value, name} = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    onHandleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.props.isContactExist(this.state.name)) {\n            alert(`${this.state.name} is already in contacts.`);\n            return;\n        }\n\n        this.props.addUser({\n            name: this.state.name,\n            number: this.state.number,\n            id: shortid.generate(),\n        })\n\n        this.reset();\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    render() {\n        return (\n            <form className={style.form} onSubmit={this.onHandleSubmit}>\n                <label>\n                    Name:\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={style.name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        onChange={this.onHandleChange}\n                        value={this.state.name}\n                    />\n                </label>\n                <label>\n                    Number:\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        className={style.number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={this.onHandleChange}\n                        value={this.state.number}\n                    />\n                </label>\n                <button type=\"submit\" className={style.btn}>Add contact</button>\n            </form>\n        )\n    }\n}\n\nDataInput.propTypes = {\n    addUser: PropTypes.func.isRequired,\n}\n\nexport default DataInput;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport s from \"../Contacts.module.css\";\n\nconst ContactItem = ({user, removeUser}) => {\n    const remove = () => removeUser(user.id);\n\n    return (\n        <li className={s.item}><span>{user.name}: </span>{user.number}\n            <button type=\"button\" className={s.button} onClick={remove}>Delete</button>\n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    user: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n}\n\nexport default ContactItem;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport ContactItem from \"./contactItem/ContactItem\";\n\nconst Contacts = ({filterInputHandler, removeUser}) => {\n\n    return (\n        <ul>\n            {filterInputHandler.map(user => (\n                <ContactItem user={user} key={user.id} removeUser={removeUser}/>\n            ))}\n        </ul>\n    );\n}\n\nContacts.propTypes = {\n    filterInputHandler: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n    })),\n    removeUser: PropTypes.func.isRequired,\n}\n\n\nexport default Contacts;","import React from \"react\";\nimport style from \"./Section.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Section = ({children, title}) => {\n    return (\n        <div className={style.section}>\n            <h2 className={style.title}>{title.toUpperCase()}</h2>\n            {children}\n        </div>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({filter, setFilter}) => {\n    return (\n        <>\n            <label className={style.label}>\n                Find contacts by name:\n                <input\n                    type=\"text\"\n                    name=\"filter\"\n                    className={style.input}\n                    onChange={setFilter}\n                    value={filter}\n                />\n            </label>\n        </>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func.isRequired,\n}\n\nexport default Filter;","import React, {Component} from \"react\";\nimport style from \"./App.module.css\";\nimport DataInput from \"./dataInput/DataInput\";\nimport Contacts from \"./contacts/Contacts\";\nimport Section from \"./section/Section\";\nimport Filter from \"./filter/Filter\";\n\nclass App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    }\n\n    componentDidMount() {\n        const users = localStorage.getItem('contacts');\n        if (users) {\n            const parseUsers = JSON.parse(users);\n            this.setState({contacts: parseUsers})\n        }\n    }\n\n    componentDidUpdate( prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n\n    isContactExist = (name) => this.state.contacts.some(item => item.name.toLowerCase() === name.toLowerCase());\n\n    filterInputHandler = () => this.state.contacts.filter(item =>\n        item.name.toLowerCase().includes(this.state.filter.toLowerCase()));\n\n    setFilter = (e) => {\n        const {value} = e.target;\n        this.setState({\n            filter: value,\n        })\n    }\n\n    addUser = (user) => {\n        this.setState(prev => ({\n            contacts: [...prev.contacts, user]\n        }))\n    }\n\n    removeUser = (id) => {\n        this.setState(prev => ({\n            contacts: [...prev.contacts.filter(contact => contact.id !== id)],\n        }))\n    }\n\n    render() {\n        return (\n            <div className={style.app}>\n                <Section title=\"Phonebook\">\n                    <DataInput\n                        addUser={this.addUser}\n                        isContactExist={this.isContactExist}\n                    />\n                </Section>\n                <Section title=\"Contacts\">\n                    <Filter filter={this.state.filter} setFilter={this.setFilter}/>\n                    <Contacts\n                        users={this.state.contacts}\n                        filterInputHandler={this.filterInputHandler()}\n                        removeUser={this.removeUser}\n                    />\n                </Section>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2Gmj9\",\"button\":\"Contacts_button__3zKln\"};"],"sourceRoot":""}